{
  "name": "AI-powered exam assistant",
  "nodes": [
    {
      "parameters": {
        "formTitle": "Exam Form",
        "formDescription": "Form regarding the description of the exam .",
        "formFields": {
          "values": [
            {
              "fieldLabel": "Exam Name",
              "placeholder": "Input exam name (e.g., “AWS Solutions Architect Associate”)",
              "requiredField": true
            },
            {
              "fieldLabel": "Weeks",
              "fieldType": "number",
              "placeholder": "How many weeks plan",
              "requiredField": true
            },
            {
              "fieldLabel": "Preferred study material format",
              "fieldType": "dropdown",
              "fieldOptions": {
                "values": [
                  {
                    "option": "Video"
                  },
                  {
                    "option": "PDF"
                  }
                ]
              },
              "requiredField": true
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.formTrigger",
      "typeVersion": 2.3,
      "position": [
        0,
        8
      ],
      "id": "38024ed6-fe78-40a5-982b-d497ec5a3003",
      "name": "On form submission",
      "webhookId": "fb032889-ae99-4c26-b62c-39e433123754"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Generate a weekly study plan in JSON format with this structure {Title, weeks, SummaryOfPlan, KeyTopics} for the exam  {{ $json['Exam Name'] }}in{{ $json.Weeks }} weeks.",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "You are an exam study planner AI.  \nGenerate a JSON object in the following structure only:  \n\n{\n  \"Title\": \"string\",\n  \"weeks\": [\n    { \"week\": 1, \"Topic\": \"string\" },\n    { \"week\": 2, \"Topic\": \"string\" },\n    ...\n  ],\n  \"SummaryOfPlan\": \"string\",\n  \"KeyTopics\": \"string\"\n}\n\nRules:\n- \"weeks\" must be an array of objects with numeric \"week\" keys (not week1, week2, etc.).\n- Output valid JSON only, no explanations, no extra text.\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        224,
        8
      ],
      "id": "7cc5e6a8-f9ed-4911-bf66-667a0b2b0336",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        232,
        232
      ],
      "id": "549579eb-fedd-462f-8d31-9c752de027ba",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "eEocWsctrtlrvb2d",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "resource": "folder",
        "name": "={{ $('On form submission').item.json['Exam Name'] }}_plan",
        "driveId": {
          "__rl": true,
          "mode": "list",
          "value": "My Drive"
        },
        "folderId": {
          "__rl": true,
          "mode": "list",
          "value": "root",
          "cachedResultName": "/ (Root folder)"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        576,
        -64
      ],
      "id": "dd4fd3df-e408-4956-bfa1-e134dbafaa9d",
      "name": "Create folder",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "ZkaD8Av7soVVpXFY",
          "name": "Google Drive account"
        }
      }
    },
    {
      "parameters": {
        "folderId": "={{ $json.id }}",
        "title": "={{ $('AI Agent').item.json.output.Title }}"
      },
      "type": "n8n-nodes-base.googleDocs",
      "typeVersion": 2,
      "position": [
        800,
        -112
      ],
      "id": "c87dc8ac-5a8c-4442-b48d-0d32f0515346",
      "name": "Create a document",
      "credentials": {
        "googleDocsOAuth2Api": {
          "id": "XFPh1z3lcFQBRg9H",
          "name": "Google Docs account"
        }
      }
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n  \"Title\": \"string\",\n  \"weeks\": [\n    { \"week\": 1, \"Topic\": \"string\" },\n    { \"week\": 2, \"Topic\": \"string\" }\n  ],\n  \"SummaryOfPlan\": \"string\",\n  \"KeyTopics\": \"string\"\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        360,
        232
      ],
      "id": "6d1dc63c-5d08-448d-be68-4aec7f7367b3",
      "name": "Structured Output Parser"
    },
    {
      "parameters": {
        "batchSize": "=1",
        "options": {
          "reset": false
        }
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        1248,
        104
      ],
      "id": "aedb5533-ef22-4ad7-942d-d936b78b3357",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "sendTo": "abc",
        "subject": "abc",
        "message": "abc",
        "options": {}
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        1472,
        -64
      ],
      "id": "ec439931-599b-4748-9c10-0992f0cb4cbb",
      "name": "Send a message",
      "webhookId": "550e3ab7-2010-4e20-b2e5-57edb9221800",
      "credentials": {
        "gmailOAuth2": {
          "id": "rLW4kCaXDYzJjz4T",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "documentURL": "={{ $json.id }}",
        "actionsUi": {
          "actionFields": [
            {
              "action": "insert",
              "text": "=Title : {{ $('AI Agent').item.json.output.Title }}\\n\\n\n"
            },
            {
              "action": "insert",
              "text": "=Weeks:\\n\\n{{ $('AI Agent').item.json.output.weeks.map(w => \"Week \" + w.week + \": \" + w.Topic).join(\"\\n\") }}\\n\\n\n"
            },
            {
              "action": "insert",
              "text": "=Summary of Plan:\\n{{ $('AI Agent').item.json.output.SummaryOfPlan }}\\n\\n\n"
            },
            {
              "action": "insert",
              "text": "=Key Topics:\\n{{ $('AI Agent').item.json.output.KeyTopics.split(\",\").join(\"\\n- \") }}\\n\n"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.googleDocs",
      "typeVersion": 2,
      "position": [
        1024,
        -112
      ],
      "id": "4345a167-1ff8-45e0-ab55-f0d0530cd05e",
      "name": "Update a document1",
      "credentials": {
        "googleDocsOAuth2Api": {
          "id": "XFPh1z3lcFQBRg9H",
          "name": "Google Docs account"
        }
      }
    },
    {
      "parameters": {
        "fieldToSplitOut": "=output.weeks",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        1024,
        104
      ],
      "id": "479e66f3-4189-40c0-908b-8a6ee08f5c0c",
      "name": "Split Out"
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineByPosition",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        800,
        104
      ],
      "id": "3388ad5a-1816-470e-bb9e-aff81b5768c3",
      "name": "Merge"
    },
    {
      "parameters": {
        "resource": "folder",
        "name": "=Week-{{ $json.week }}:{{ $json.Topic }}",
        "driveId": {
          "__rl": true,
          "mode": "list",
          "value": "My Drive"
        },
        "folderId": {
          "__rl": true,
          "value": "={{ $('Merge').item.json.id }}",
          "mode": "id"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        1472,
        128
      ],
      "id": "67e6086d-f453-43e9-bd53-7c57b5d26302",
      "name": "Create SubFolders",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "ZkaD8Av7soVVpXFY",
          "name": "Google Drive account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=If the user selected \"Video\":\nYou are a helpful search assistant. Your task is to find the most relevant educational YouTube video for a specific topic.\n\nTopic: \"{{ $('Loop Over Items').item.json.Topic }}\" for the{{ $('On form submission').item.json['Exam Name'] }}  exam.\n\nInstructions:\n1. Generate a highly specific YouTube search query for this topic.\n2. From the search results, find the most relevant video URL.\n3. Provide ONLY the full YouTube video URL and nothing else.\nIf the user selected \"PDF\":You are a helpful search assistant. Your task is to find a direct link to a high-quality, publicly accessible PDF study guide for a specific topic.\n\nTopic: \"{{ $('Loop Over Items').item.json.Topic }}\" for the {{ $('On form submission').item.json['Exam Name'] }}  exam.\n\nInstructions:\n1. Search for university lecture notes, open-source textbooks, or government-provided study materials.\n2. The link must end in \".pdf\".\n3. Provide ONLY the direct download URL to the PDF and nothing else.",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        1696,
        128
      ],
      "id": "9b5d3332-097d-4086-b6e2-5214d7736339",
      "name": "AI Agent1"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        1768,
        352
      ],
      "id": "7769cb80-2d98-4c5f-bf5a-5b74720d1288",
      "name": "Google Gemini Chat Model1",
      "credentials": {
        "googlePalmApi": {
          "id": "eEocWsctrtlrvb2d",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "url": "={{ $json.output }}",
        "options": {
          "response": {
            "response": {
              "responseFormat": "file",
              "outputPropertyName": "DATA"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2048,
        128
      ],
      "id": "a1cc4fe0-b25e-460f-b767-62111465029e",
      "name": "HTTP Request",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "3a2e7d0b-c23c-4367-ba59-987080c8441a",
              "leftValue": "={{ $json.output }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2272,
        128
      ],
      "id": "ed532f37-f6bf-4ba1-92ca-7be62bf3d981",
      "name": "If"
    },
    {
      "parameters": {
        "name": "ABC",
        "driveId": {
          "__rl": true,
          "value": "={{ $('Create SubFolders').item.json.id }}",
          "mode": "id"
        },
        "folderId": {
          "__rl": true,
          "mode": "list",
          "value": "root",
          "cachedResultName": "/ (Root folder)"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        2496,
        324
      ],
      "id": "aa6efe11-889d-40d4-98be-a253ac1dc8e6",
      "name": "Upload file",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "ZkaD8Av7soVVpXFY",
          "name": "Google Drive account"
        }
      }
    }
  ],
  "connections": {
    "On form submission": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Create folder",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Create folder": {
      "main": [
        [
          {
            "node": "Create a document",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "AI Agent",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Create a document": {
      "main": [
        [
          {
            "node": "Update a document1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [
          {
            "node": "Send a message",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Create SubFolders",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update a document1": {
      "main": [
        []
      ]
    },
    "Split Out": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create SubFolders": {
      "main": [
        [
          {
            "node": "AI Agent1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent1": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Upload file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Upload file": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send a message": {
      "main": [
        []
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "pinData": {},
  "triggerCount": 0,
  "meta": {
    "templateCredsSetupCompleted": true
  }
}